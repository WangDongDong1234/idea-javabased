1.堆排序代码实现
2.设计模式


算法：动态规划
dfs:路径问题
快排
二叉搜索树=二叉排序树（跟节点大于左小于右）
打家劫舍（动态规划  https://www.cnblogs.com/gzshan/p/11188104.html）

大整数加法，要求代码可读性
非递减数组中查询某个目标值出现个数。解法：二分查找左右边界
leetcode 124 二叉树最大路径和
一个圆上三个点，组成锐角三角形概率。现场没算出来 1/4
正则表达式匹配
求二叉树两个节点的最远距离
二叉树的递归与非递归
求二叉树的最长路径长度。
二叉树的后续遍历非递归形式
买卖股票的最佳时机，只能一次买入和一次卖出，要求输出买入的时机和卖出的时机和赚取的最大利润。
一天有24小时，一个工人在某一天里短短续续的工作了几个小时 例如1 ～ 2 点，4～8点 5～10点。。。，求这个工人这一天中一共工作了几个小时。(其实就是区间合并问题)
稀疏向量的点乘 要求：尽量高效地实现，需要同时考虑时空复杂度。
链表判断是否有环，归并排序描述，二叉排序树时间复杂度
leetcode958  判断是否是完全二叉树
leetcode3 最长不重复子串
给定一个排序链表，删除所有重复的元素，使得每个元素只出现一次
给定一个二叉树，原地将它展开为链表
给定一棵二叉树，想象自己站在它的右侧，按照从顶部到底部的顺序，返回从右侧所能看到的节点值。
算法：蛇形打印二叉树


01背包
dfs
springbean



